# -*- coding: utf-8 -*-
"""tagger 2.0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ItDLoh05UI-MwEg3gEaTC3aJ2PgEi_ow
"""

# deixar todas as letras minúsculas

def ler(nome_arq):
  arquivo = open(nome_arq, 'r', encoding='utf-8')
  conteudo_arq = arquivo.read()
  arquivo.close()
  return conteudo_arq

text = ler('TEST-SET.txt')
text_lower = text.lower()

# limpar o texto, remover pontuação

import re
text_clean = re.sub('[.;,-:!?—()]','',text_lower)
with open('TEST-SET.txt', 'w', encoding='utf-8') as f:
  f.writelines(text_clean)

# remover palavras repetidas

set_list = list(set(text_clean.split()))
set_list.sort()

# parametros de etiquetagem nominal baseado em RegEx

patterns = [
            (r'asuriní', 'n'),
            (r'.*á', 'dem'),
            (r'.*a’é', 'dem'),
            (r'.*eokwé', 'dem'),
            (r'.*ká', 'dem'),
            (r'.*kwé', 'dem'),
            (r'.*mi', 'dem'),
            (r'.*wýj', 'dem'),
            (r'.*wyngé', 'dem'),
            (r'.*mén', 'n'),
            (r'.*moroyró', 'n'),
            (r'.*akoma’é', 'n'),
            (r'.*akwaháwihi', 'n'),
            (r'.*amýn', 'n'),
            (r'.*aosé', 'n'),
            (r'.*apýj', 'n'),
            (r'.*asýk', 'n'),
            (r'.*asýng', 'n'),
            (r'.*hé', 'n'),
            (r'.*ipirá', 'n'),
            (r'.*kamará', 'n'),
            (r'.*karó', 'n'),
            (r'.*kasóangáwa', 'n'),
            (r'.*ma’é', 'n'),
            (r'.*o’ó', 'n'),
            (r'.*osepé', 'n'),
            (r'.*poraké', 'n'),
            (r'.*sowé', 'n'),
            (r'.*kosó', 'n'),
            (r'.*sahýa', 'n'),
            (r'.*saotía', 'n'),
            (r'.*sekwehé', 'part.epist'),
            (r'.*eomí', 'pron.dem'),
            (r'.*eopé', 'pron.dem'),
            (r'.*pé', 'pron.dem'),
            (r'.*sekýj', 'n.des'),
            (r'.*eopé', 'pron.dem'),
            (r'.*pé', 'pron.dem'),
            (r'.*né', 'pron.dep'),
            (r'.*oré', 'pron.dep'),
            (r'.*sé', 'pron.dep'),
            (r'.*sené', 'pron.dep'),
            (r'.*isé', 'pron.ind'),
            (r'.*oré', 'pron.ind'),
            (r'.*ené', 'pron.indep'),
            (r'.*pehé', 'pron.indep'),
            (r'.*a’a', 'n'),
            (r'.*’óng', 'n.des'),
            (r'.*etá', 'n.des'),
            (r'.*eté', 'n.des'),
            (r'.*ét', 'suf.der'),
            (r'.*páp', 'suf.der'),
            (r'^wet', 'pref.corr'),
            (r'^oro', 'pref.corr/pref.pess'),
            (r'^a', 'pref.pess'),
            (r'^ara', 'pref.pess'),
            (r'^e', 'pref.pess'),
            (r'^o', 'pref.pess'),
            (r'^orow', 'pref.pess'),
            (r'^pe', 'pref.pess'),
]

# aplicar parâmetros a lista e transformar em dicionário

#import nltk

nom_tagger = nltk.RegexpTagger(patterns)
tags = nom_tagger.tag(set_list)
tags = dict(tags)
print(tags)

#remover etiquetas vazias

for key, value in tags.copy().items():
    if value is None:
        del tags[key]
print(tags)

#retransformar em lista e aplicar parametros na lista com etiquetas cheias

tags = list(tags)
nom_tagger = nltk.RegexpTagger(patterns)
tags = nom_tagger.tag(tags)
print(tags)

#criar arquivo .txt com as etiquetas


lines = '\n'.join(str(v) for v in tags)
clean_lines = re.sub('[,()\']','',lines)
clean_lines = clean_lines.replace(' ','\t')

with open('output_tags.txt', 'w', encoding='utf-8') as f:
  f.writelines(clean_lines)

#aplicar as tags e criar novo arquivo .txt etiquetado

import pandas as pd

glossary = 'output_tags.txt'

with open('TEST-SET.txt', 'r', encoding='utf-8') as f:
    infile = f.readlines()

df = pd.read_csv(glossary, sep='\t', header=None, index_col=0)
glossary = df.to_dict()[1]

outlines = []

for line in infile:
    list_of_words = line.lower().split()

    new_line = ''

    for word in list_of_words:

        if word in glossary:
            new_line += word + '\\' + glossary[word] + ' '
        else:
            new_line += word + ' '

    outlines.append(new_line.strip() + '\n')

with open('TEST-SET-tagged.txt', 'w', encoding='utf-8') as f:
    f.writelines(outlines)

read = open('TEST-SET-tagged.txt', 'r', encoding='utf-8')
print(read.read())
